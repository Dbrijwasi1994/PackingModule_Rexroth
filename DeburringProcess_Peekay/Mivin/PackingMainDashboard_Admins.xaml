<UserControl x:Class="PackingModule_Rexroth.Mivin.PackingMainDashboard_Admins"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PackingModule_Rexroth.Mivin"
             xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
             mc:Ignorable="d" 
             d:DesignHeight="1000" d:DesignWidth="1800" Loaded="PackingDashboardAdmins_Loaded" Unloaded="PackingDashboardAdmins_Unloaded">

    <UserControl.Background>
        <ImageBrush ImageSource="/Images/Background4.jpg" Opacity="0.3"/>
    </UserControl.Background>
    <UserControl.Resources>
        <ResourceDictionary Source="../Resources/ControlStyles.xaml"/>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Margin="2,2,2,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Margin="0,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="215*"/>
                    <ColumnDefinition Width="318*"/>
                    <ColumnDefinition Width="50*"/>
                    <ColumnDefinition Width="1198*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0" Content="RUNNING SCHEDULE STATUS" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontWeight="Bold" FontSize="18" Foreground="White" Background="#606060" Grid.ColumnSpan="4"/>
                <StackPanel Orientation="Horizontal" Grid.Column="4" Background="#606060">
                    <Label x:Name="lblScannerStatus" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontWeight="Bold" FontSize="18" Foreground="DarkSeaGreen" Background="#606060"/>
                    <Image x:Name="imgScannerStatus"/>
                </StackPanel>
            </Grid>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <DataGrid Grid.Column="0" x:Name="RunningModelDetailsGrid" AutoGenerateColumns="False" IsEnabled="True" IsReadOnly="True" CanUserResizeRows="False" BorderThickness="1" VerticalGridLinesBrush="#2F000000" HorizontalGridLinesBrush="#2F000000" CanUserDeleteRows="False" CanUserResizeColumns="True" HorizontalAlignment="Stretch" Margin="0,2,0,2" VerticalAlignment="Stretch" CanUserAddRows="False" IsSynchronizedWithCurrentItem="False" HeadersVisibility="Column" HorizontalContentAlignment="Center" AreRowDetailsFrozen="False" CanUserSortColumns="True" CanUserReorderColumns="False" SelectionMode="Single" SelectionUnit="FullRow" RowHeight="45" ColumnHeaderHeight="60" ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <DataGrid.Resources>
                        <ResourceDictionary Source="../Resources/DataGridStyle.xaml"/>
                    </DataGrid.Resources>

                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Path=StationID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Station ID" MinWidth="100" MaxWidth="300" Width="120" FontSize="20"/>

                        <DataGridTextColumn Binding="{Binding Path=WorkOrderNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Work Order No." MinWidth="100" MaxWidth="300" Width="120" Visibility="Collapsed" FontSize="20"/>

                        <DataGridTextColumn Binding="{Binding Path=RunningPumpModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Pump Part No." MinWidth="100" MaxWidth="300" FontSize="20"/>

                        <DataGridTextColumn Binding="{Binding Path=CustomerModel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Cust. Part No" MinWidth="100" MaxWidth="300" FontSize="20"/>

                        <DataGridTextColumn Binding="{Binding Path=QuantityPerBox, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Qty Per Box" MinWidth="100" MaxWidth="300" FontSize="20"/>

                        <DataGridTextColumn Binding="{Binding Path=ScannedQuantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Scanned Qty" MinWidth="100" Width="160" MaxWidth="300" FontSize="20"/>

                        <DataGridTextColumn Binding="{Binding Path=Operator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Operator" MinWidth="120" Width="120" MaxWidth="300" Visibility="Collapsed" FontSize="20"/>

                        <DataGridTextColumn Binding="{Binding Path=LastScannedSerialNum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Last Scanned SlNo." MinWidth="140" MaxWidth="400" FontSize="20"/>

                        <DataGridTextColumn Binding="{Binding Path=WorkOrderStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Status" MinWidth="100" MaxWidth="300" FontSize="20"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Grid>

        <Grid Grid.Row="1" Margin="2,0,2,2">
            <Grid.RowDefinitions>
                <RowDefinition Height="0"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="300"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" Margin="2,0,2,2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" Content="MONTHLY SCANNED PUMP DETAILS" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontWeight="Bold" FontSize="18" Foreground="White" Background="#606060"/>
                    <DataGrid x:Name="dgMonthlyScannedPumpDetails" Grid.Row="1" AutoGenerateColumns="False" IsEnabled="True" IsReadOnly="True" CanUserResizeRows="False" BorderThickness="1" VerticalGridLinesBrush="#2F000000" HorizontalGridLinesBrush="#2F000000" CanUserDeleteRows="False" CanUserResizeColumns="True" HorizontalAlignment="Stretch" Margin="0,2,0,2" VerticalAlignment="Stretch" CanUserAddRows="False" IsSynchronizedWithCurrentItem="False" HeadersVisibility="Column" HorizontalContentAlignment="Center" AreRowDetailsFrozen="False" CanUserSortColumns="True" CanUserReorderColumns="False" SelectionMode="Single" SelectionUnit="FullRow" RowHeight="45" ColumnHeaderHeight="60">
                        <DataGrid.Resources>
                            <ResourceDictionary Source="../Resources/DataGridStyle.xaml"/>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Path=StationID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Station ID" MinWidth="100" MaxWidth="300" Width="120" FontSize="20"/>

                            <DataGridTextColumn Binding="{Binding Path=MonthlyTarget, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Customer Schedule" MinWidth="120" MaxWidth="400" FontSize="20"/>

                            <DataGridTextColumn Binding="{Binding Path=MonthlyActual, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Actual Produced" MinWidth="100" MaxWidth="300" FontSize="20"/>

                            <DataGridTextColumn Binding="{Binding Path=MonthlyPending, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Pending Schedule" MinWidth="100" MaxWidth="300" FontSize="20"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Label Grid.Row="2" Content="DAILY SCANNED PUMP DETAILS" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontWeight="Bold" FontSize="18" Foreground="White" Background="#606060"/>

                    <DataGrid x:Name="dgDailyScannedPumpDetails" Grid.Row="3" AutoGenerateColumns="False" IsEnabled="True" IsReadOnly="True" CanUserResizeRows="False" BorderThickness="1" VerticalGridLinesBrush="#2F000000" HorizontalGridLinesBrush="#2F000000" CanUserDeleteRows="False" CanUserResizeColumns="True" HorizontalAlignment="Stretch" Margin="0,2,0,2" VerticalAlignment="Stretch" CanUserAddRows="False" IsSynchronizedWithCurrentItem="False" HeadersVisibility="Column" HorizontalContentAlignment="Center" AreRowDetailsFrozen="False" CanUserSortColumns="True" CanUserReorderColumns="False" SelectionMode="Single" SelectionUnit="FullRow" RowHeight="45" ColumnHeaderHeight="60">
                        <DataGrid.Resources>
                            <ResourceDictionary Source="../Resources/DataGridStyle.xaml"/>
                        </DataGrid.Resources>
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Path=StationID, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Station ID" MinWidth="100" MaxWidth="300" Width="120" FontSize="20"/>

                            <DataGridTextColumn Binding="{Binding Path=DailyTarget, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Daily Target" MinWidth="120" MaxWidth="400" FontSize="20"/>

                            <DataGridTextColumn Binding="{Binding Path=DailyActual, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Daily Actual" MinWidth="100" MaxWidth="300" FontSize="20"/>

                            <DataGridTextColumn Binding="{Binding Path=DailyPending, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="Daily Pending" MinWidth="100" MaxWidth="300" FontSize="20"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>

                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="31"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="34"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0" Content="Shift Target VS Actual" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontWeight="Bold" FontSize="15" Foreground="White" Background="#606060" Margin="5,0,5,1"/>
                    <syncfusion:SfCircularGauge Name="gaugeShiftTargetVsActual" Grid.Row="1" Background="White" GaugeHeaderPosition="0.35,0.4" HeaderAlignment="Custom" Margin="5,2,5,2" >
                        <syncfusion:SfCircularGauge.Resources>
                            <Style TargetType="syncfusion:CircularScaleLabel">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="syncfusion:CircularScaleLabel">
                                            <Grid>
                                                <TextBlock Text="{Binding Content}" Foreground="{Binding Foreground}" FontSize="{Binding LabelFontSize}" Margin="0,15,0,0" />
                                                <!--Customized Label Position-->
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </syncfusion:SfCircularGauge.Resources>
                        <syncfusion:SfCircularGauge.GaugeHeader>
                            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="0">
                                <TextBlock Foreground="Gray" FontSize="30" HorizontalAlignment="Center" FontWeight="Bold">
                        <Run Text="{Binding ShiftActual}"></Run>
                        <Run Text="{Binding ElementName=gauge1, Path=Scales[0].Ranges[0].EndValue, Mode=TwoWay}"></Run>
                        <Run Text=""></Run>
                                </TextBlock>
                                <TextBlock Text="" Height="10"/>
                                <TextBlock Text="{Binding ShiftwiseActual}" Foreground="Gray" FontSize="14"/>
                                <TextBlock Text="" Height="10"/>
                                <TextBlock Text="{Binding ShiftwiseTarget}" Foreground="Gray" FontSize="14"/>
                            </StackPanel>
                        </syncfusion:SfCircularGauge.GaugeHeader>
                        <syncfusion:SfCircularGauge.Scales>
                            <syncfusion:CircularScale x:Name="scaleShiftTargetVsActual" RimStroke="#FFE8E8E8" RimStrokeThickness="60" TickStroke="#c1c1c1" SmallTickStroke="#c1c1c1" TickShape="Triangle" LabelStroke="#999999" FontSize="10" FontWeight="SemiBold" RangePointerPosition="Cross" TickLength="0" LabelOffset="-0.1" LabelPosition="Custom" Interval="100" MinorTicksPerInterval="0" BindRangeStrokeToLabels="False" BindRangeStrokeToTicks="False" TickStrokeThickness="1.5" SmallTickStrokeThickness="1.5" StartAngle="180" SweepAngle="180" StartValue="0" EndValue="{Binding ShiftTarget}" Margin="0,10,0,0">
                                <syncfusion:CircularScale.Ranges>
                                    <syncfusion:CircularRange StartValue="0" EndValue="{Binding ShiftActual}" Stroke="#FF0DBCF5" />
                                </syncfusion:CircularScale.Ranges>
                                <syncfusion:CircularScale.Pointers>
                                    <syncfusion:CircularPointer  Value="{Binding ShiftActual}" PointerType="RangePointer" RangePointerStroke="Transparent" RangePointerStrokeThickness="60" />
                                </syncfusion:CircularScale.Pointers>
                            </syncfusion:CircularScale>
                        </syncfusion:SfCircularGauge.Scales>
                    </syncfusion:SfCircularGauge>
                    <Label Grid.Row="2" Content="Shift Efficiency" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalContentAlignment="Center" Background="#606060" VerticalContentAlignment="Center" FontWeight="Bold" FontSize="15" Foreground="White" Margin="5,2,5,2"/>
                    <syncfusion:SfCircularGauge Name="gaugeShiftEfficiency" Grid.Row="3" Background="White" GaugeHeaderPosition="0.35,0.4" HeaderAlignment="Custom" Margin="5,2,5,2" >
                        <syncfusion:SfCircularGauge.Resources>
                            <Style TargetType="syncfusion:CircularScaleLabel">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="syncfusion:CircularScaleLabel">
                                            <Grid>
                                                <TextBlock Text="{Binding Content}" Foreground="{Binding Foreground}" FontSize="{Binding LabelFontSize}" Margin="0,15,0,0" />
                                                <!--Customized Label Position-->
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </syncfusion:SfCircularGauge.Resources>
                        <syncfusion:SfCircularGauge.GaugeHeader >
                            <StackPanel HorizontalAlignment="Center">
                                <TextBlock  Foreground="Gray" FontSize="30" HorizontalAlignment="Center" FontWeight="Bold" >
                        <Run Text="{Binding ShiftEfficiency}"></Run>
                        <Run Text="{Binding ElementName=gauge1, Path=Scales[0].Ranges[0].EndValue, Mode=TwoWay}"></Run>
                        <Run Text="%"></Run>
                                </TextBlock>
                                <TextBlock  Text="Shift Efficiency" Foreground="Gray" FontSize="13" Margin="10,20,0,0" />
                            </StackPanel>
                        </syncfusion:SfCircularGauge.GaugeHeader>
                        <syncfusion:SfCircularGauge.Scales>
                            <syncfusion:CircularScale x:Name="scaleShiftEfficiency" RimStroke="#FFE8E8E8" RimStrokeThickness="60" TickStroke="#c1c1c1" SmallTickStroke="#c1c1c1"  TickShape="Triangle" LabelStroke="#999999" FontSize="10" FontWeight="SemiBold"  RangePointerPosition="Cross" TickLength="0" LabelOffset="-0.1" LabelPosition="Custom" Interval="20" MinorTicksPerInterval="0" BindRangeStrokeToLabels="False" BindRangeStrokeToTicks="False" TickStrokeThickness="1.5" SmallTickStrokeThickness="1.5" StartAngle="180" SweepAngle="180" StartValue="0" EndValue="100" Margin="0,10,0,0">
                                <syncfusion:CircularScale.Ranges>
                                    <syncfusion:CircularRange StartValue="0" EndValue="{Binding ShiftEfficiency}" Stroke="#FF0DBCF5" />
                                </syncfusion:CircularScale.Ranges>
                                <syncfusion:CircularScale.Pointers>
                                    <syncfusion:CircularPointer Value="{Binding ShiftEfficiency}" PointerType="RangePointer" RangePointerStroke="Transparent" RangePointerStrokeThickness="60" />
                                </syncfusion:CircularScale.Pointers>
                            </syncfusion:CircularScale>
                        </syncfusion:SfCircularGauge.Scales>
                    </syncfusion:SfCircularGauge>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
